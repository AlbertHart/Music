<!DOCTYPE html>
<html lang="en-US">

<head>
    <meta charset="utf-8" />
    <link rel="shortcut icon" type="image/png" href="favicon.png">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Process MusicXML</title>

    <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-152244338-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-152244338-2');
</script>

    <!-- Bootstrap core CSS -->
    <link href="./libraries/flatlab/css/bootstrap.min.css" rel="stylesheet">
    <link href="./libraries/flatlab/css/bootstrap-reset.css" rel="stylesheet">
    <!--external css-->
    <link href="./libraries/flatlab/assets/font-awesome/css/font-awesome.css" rel="stylesheet" />
    

    <!-- Custom styles for this template -->
    <link href="./libraries/flatlab/css/style.css" rel="stylesheet">
    <link href="./libraries/flatlab/css/style-responsive.css" rel="stylesheet" />

     <!-- use a CDN to load jszip -->
     <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.5.0/jszip.min.js"></script>

     <script src="../osmd_library/opensheetmusicdisplay.min.js"></script>


    <link rel="stylesheet" href="musicxml_css.css" />
    <script src="sprintf_new.js?v=2.66"></script>
    <script src="music_common/ABMXML_Lib_Common.js?v=2.66"></script>

    <script src="musicxml_process.js?v=2.66"></script>

    <!--  individual files for each process -->
    <script>MusicDOM.prototype.libs__loaded = {};</script>
    <script src="music_common/ABMXML_Lib_View.js?v=2.66"></script>
    <script src="music_common/ABMXML_Lib_Transpose.js?v=2.66"></script>
    <script src="music_common/ABMXML_Lib_AddBase.js?v=2.66"></script>
    <script src="music_common/ABMXML_Lib_TrimScore.js?v=2.66"></script>
    <script src="music_common/ABMXML_Lib_AddRhythm.js?v=2.66"></script>
    <script>console.log("Including: ABMXML_Lib_AddSolo.js");</script>
    <script src="music_common/ABMXML_Lib_AddSolo.js?v=2.66"></script>



    <!-- this uses the namespace object MLIB to access transpose functions.js -->
    <!-- use: var MLIB = new MusicDOM();  -->



    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'UA-152244338-2');
    </script>

    
    <script>
        var MLIB = new MusicDOM(); 

        // declare this function locally
        // for easier use
        var get_self = MLIB.get_self;
        //console.log("GET_SELF: %s", get_self());

        var demonstration_scores_array = {};

        var parameters = {process_content: "view_play"};
  
        var xml_string_loaded;



    
    function load_url_text(surl0, todo) 
    {
        console.log(get_self(surl0, todo));

        var xmlhttp;
        if (window.XMLHttpRequest) {
            xmlhttp = new XMLHttpRequest();
        } else {
            // code for older browsers
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        xmlhttp2 = xmlhttp;

        xmlhttp.todo = todo;

        xmlhttp.onreadystatechange = function() 
        {

       
            //console.log("onreadystatechange: readyState: %s status: %s LENGTH: %s", 
            //    this.readyState, this.status, this.responseText.length);
            xobj = this;
            if (this.readyState == 4)
            {
                score_text = this.responseText;

            }
            if (this.readyState == 4 && this.status == 200) {
                score_text = this.responseText;

                //console.log("this.readyState == 4 && this.status == 200 this.todo: %s", this.todo);

                if (this.todo == "get_score_names" ||
                    this.todo == "get_score_names_and_process")
                {
                    console.log("score_text: %s", score_text); 
 

                    let lines = score_text.split("\n");
                    for (let iline = 0; iline < lines.length; iline++)
                    {
                        sline = lines[iline];
                        sdata = sline.split(";");
                        if (sdata[0] == "score")
                        {
                            score_name = sdata[1];
                            score_url = sdata[2];
                            
                            demonstration_scores_array[score_name] = {name: score_name, url: score_url};
                            console.log("NAME: %s URL: %s", score_name, score_url);
                        }
                    }         
                     // these are set after they are loaded from the server
                    console.log("Set demonstration scores into SELECT");
                    let score_element = document.getElementById("demonstration_score");
                    let select_html = "";
                    let keys = Object.keys(demonstration_scores_array);
                    for (let iscore = 0; iscore < keys.length; iscore++)
                    {
                        let key = keys[iscore];
                        let score = demonstration_scores_array[key];
                        let selected = "";
                        // select the last one used
                        //console.log("score.name: %s parameters.demonstration_score: %s", score.name, parameters.demonstration_score);
                        if (score.name == parameters.demonstration_score)
                            selected = "selected";
                        shtml = sprintf(`<option value="%s" %s>%s</option>\n`, key, selected, score.name);
                        //console.log("SHTML: %s", shtml);
                        select_html += shtml;
                    }
                    
                    score_element.innerHTML = select_html;

                    //console.log("score_element.id: %s score_element.name: %s type: %s tagName: %s", score_element.id, score_element.name, score_element.type, score_element.tagName);

                    //console.log("score_element.innerHTML: %s", score_element.innerHTML);

                    // load parameters after score names are added
                    load_parameters_from_local_storage();  // load saved parameters

                    // if view mode - go ahead and process
                    if (this.todo == "get_score_names_and_process")
                        process_loaded_xml();
          
                }
                else if (this.todo = "process")
                {
                    
                    xml_string_loaded = this.responseText;
                    console.log("xml_string_loaded length: %s\n    %s", 
                        xml_string_loaded.length, xml_string_loaded.substr(0,100));
                    process_xml(xml_string_loaded);
                }
                else
                {
                    document.getElementById("demo").innerHTML = score_text;
                }
            }
        };

        //surl = "http://ahlbapps.com/scores/every_time_score.xml";
        //surl = "http://ahlbapps.com/scores/";
        //surl = scores.txt
        surl = "http://ahlbapps.com/scores/" + surl0;
        xmlhttp.open("GET", surl, true);
        xmlhttp.send();
    }

    

    </script>


  </head>

  <body class="boxed-page">

    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KPJDJHV"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

      <div class="container">
        <section id="container" class="" >
             <!--header start-->
             <header class="header white-bg">
                <div class="container">
                    <div class="sidebar-toggle-box">
                        <i class="fa fa-bars"></i>
                    </div>
                    <!--logo start-->
                    <a href="index.htm" class="logo">
                        <img id=logo height='50'>
                        <script>
                             let logo_elt = document.getElementById("logo");
                            logo_elt.src = "images/ice-logo.png";
                        </script>
                    </a>
                    <!--logo end-->
                    <div class="nav notify-row" id="top_menu">
                        <!--  notification start -->
                        <div id=title class=title >MusicXml Processor
                           <div style="font-size: 0.8em;">
                            An application to view, play, transpose and modify
                               MusicXML scores.
                        
                            </div>  
                        </div>
                            <!-- notification dropdown end -->                      
                        <!--  notification end -->
                    </div>

                    <div class="top-nav ">
                        <!--search & user info start-->
                            <div class="gcse-search"></div>
                       
                        <!--search & user info end-->
                    </div>
                </div>
            </header>
            <!--header end-->

            <!--sidebar start-->
            <aside>
                <div id="sidebar"  class="nav-collapse ">
                    <script> 
                        var use_show_process = "open"; 
                        show_sidebar();
                    </script>
                </div>
            </aside>
            <!--sidebar end-->
            
            <!--main content start-->
            <section id="main-content"  >
              <section class=" wrapper" >

                <section class="card" >
                    <header class="card-header">
                        
                    </header>
                    <div class="card-body" >


               

    <!-- START CONTENT -->
    <div id="view_play_content" class="content_text">
        <h3>View and Playback Scores</h3>
        <img width=100% src="images/sample_score.png">

        <div id="view_play_text"> </div>

        

    </div> <!-- END CONTENT -->
                
    <!-- START CONTENT -->
    <div id="transpose_content" class="content_text">

    <div id="transpose_text"> </div>

    <script>
        do_transpose_text("transpose_text", false);
    </script>
    
    
    

        <p class=font_element>
        <label>Transpose Direction</label>
        <select id="transpose_direction" name="transpose_direction"   
            class="parameters" onchange="get_parameter_change(this);">
            <option value = "closest" selected>Closest</option>
            <option value = "up">Move Notes Up</option>
            <option value = "down">Move Notes Down</option>
        </select>
        </p>

        <p class=font_element>
        <label>Transpose to key</label>
        <select id="transpose_key" name="transpose_key"   
            class="parameters" onchange="get_parameter_change(this);">
            <option value = "None" selected>None</option>
            <option value = "Ab">Ab / Fm</option>
            <option value = "A">A / F#m</option>
                <!-- <option value = "A#">A#</option> -->
            <option value = "Bb" >Bb / Gm</option>
            <option value = "B">B / G#m</option>
            <option value = "Cb">Cb / Abm</option>
            <option value = "C">C / Am</option>
            <option value = "C#">C# / A#m</option>
            <option value = "Db">Db / Bbm</option>
            <option value = "D">D / Bm</option>
                <!-- <option value = "D#">D#</option> -->
            <option value = "Eb">Eb / Cm</option>
            <option value = "E">E / C#m</option>
            <option value = "F">F / Dm</option>
            <option value = "F#">F# / D#m</option>
            <option value = "Gb">Gb / Ebm</option>
            <option value = "G">G / Em</option>
                <!-- <option value = "G#">G#</option> -->
        </select>

    </div> <!-- END CONTENT -->

    <!-- START CONTENT -->
    <div id="add_bass_content" class="content_text">

    <div id="add_bass_text"> </div>

    <script>
        do_add_bass_text("add_bass_text", false);
    </script>
        
    
        <h3>Select Accompaniment Format</h3>
        <!--RADIO Images-->
        <input type="radio" class="bass_radio_item parameters" value="" name="bass_format" id="radio_chords" checked
            onchange="get_parameter_change(this);">
            <label class="label_item" for="radio_chords"> <img class="bass_image" src="images/chords.png"> </label>
        
    
        <input type="radio" class="bass_radio_item parameters" value="" name="bass_format" id="radio_oompah"
            onchange="get_parameter_change(this);">
        <label class="label_item" for="radio_oompah"> <img class="bass_image" src="images/oompah.png"> </label>
    
        <input type="radio" class="bass_radio_item parameters" value="" name="bass_format" id="radio_oompapah"
            onchange="get_parameter_change(this);">
        <label class="label_item" for="radio_oompapah"> <img class="bass_image" src="images/oompapah.png"> </label>

        <input type="radio" class="bass_radio_item parameters" value="" name="bass_format" id="radio_longshort"
            onchange="get_parameter_change(this);">
        <label class="label_item" for="radio_longshort"> <img class="bass_image" src="images/longshort.png"> </label>
    
        <input type="radio" class="bass_radio_item parameters" value="" name="bass_format" id="radio_arpeggio"
            onchange="get_parameter_change(this);">
        <label class="label_item" for="radio_arpeggio"> <img class="bass_image" src="images/arpeggio.png"> </label>

        <h3>Select Staffs</h3>
        <!--RADIO Images-->
        <input type="radio" class="staff_radio_item parameters" value="" name="staff_type" id="bass-clef" checked
            onchange="get_parameter_change(this);">
            <label class="label_item" for="bass-clef"> <img class="staff_image" src="images/bass-clef.png"> </label>
        
    
        <input type="radio" class="staff_radio_item parameters" value="" name="staff_type" id="grand-staff"
            onchange="get_parameter_change(this);">
        <label class="label_item" for="grand-staff"> <img class="staff_image" src="images/grand-staff.png"> </label>
  

</div><!-- END CONTENT -->

<!-- START CONTENT -->
<div id="add_solo_content" class="content_text">

    <div id="add_solo_text"> </div>

    <script>
        do_add_solo_text("add_solo_text", false);
    </script>

<tr><td>First Measure: </td><td><input type=number id=first_solo_measure style="width: 4em;" 
    class="parameters" onchange="get_parameter_change(this);"></td></tr>
<tr><td>Last Measure: (0 for all)</td><td><input type=number id=last_solo_measure style="width: 4em;" 
    class="parameters" onchange="get_parameter_change(this);"></td></tr>


</div><!-- END CONTENT -->

                
    <!-- START CONTENT -->
    <div id="trim_score_content" class="content_text">
    <div id="trim_score_text"> </div>
    

    <script>
        do_trim_score_xml_text("trim_score_text", false);
    </script>
    
    

    <table>
        <tr><td>First Measure: </td><td><input type=number id=first_trim_measure style="width: 4em;" 
            class="parameters" onchange="get_parameter_change(this);"></td></tr>
        <tr><td>Last Measure: (0 for all)</td><td><input type=number id=last_trim_measure style="width: 4em;" 
            class="parameters" onchange="get_parameter_change(this);"></td></tr>
        <tr><td>First Note: </td><td><input type=number id=first_note style="width: 4em;" 
            class="parameters" onchange="get_parameter_change(this);"></td></tr>
        <tr><td>Last Note: (0 for all)</td><td><input type=number id=last_note style="width: 4em;" 
            class="parameters" onchange="get_parameter_change(this);"></td></tr>
    </table>
    <br>
    <br> 


    
    

    <p></p>


    
    
</div> <!-- END CONTENT -->

        <!-- START CONTENT -->
        <div id="voice_leading_content" class="content_text">
        <div id="voice_leading_text"> </div>
            
            <script>
                do_voice_leading_text("voice_leading_text", false);
            </script>
            
            

            
            <p class=font_element>
                <label>Inversion to start with</label>
                <select id="starting_inversion" name="starting_inversion"   
                    class="parameters" onchange="get_parameter_change(this);">
                    <option value = "root" selected>Root</option>
                    <option value = "1st">First</option>
                    <option value = "2nd">2nd</option>
                    <option value = "3rd">3rd if available</option>
                </select>
                        </p>

            <p class=font_element>
                <label>Max Number of Notes in Chord</label>
                    <select id="max_number_of_notes_leading" name="max_number_of_notes_leading"
                        class="parameters" onchange="get_parameter_change(this);">
                        <option value = "2">2</option>
                        <option value = "3">3</option>
                        <option value = "4" selected>4</option>
                        <option value = "5">5</option>
            </select>
        </p>

        </div><!-- END CONTENT -->

        

        <!-- START CONTENT -->
        <div id="melody_chords_content" class="content_text">
            <div id="melody_chords_text"> </div>
            
            <script>
                do_melody_chords_text("melody_chords_content", false);
            </script>
            
            

            <p class=font_element>
                <label>Max Number of Notes in Chord - including any melody note</label>
                 <select id="max_number_of_notes_melody" name="max_number_of_notes_melody"     
                    class="parameters"    onchange="get_parameter_change(this);">
                <option value = "2">2</option>
                <option value = "3">3</option>
                <option value = "4" selected>4</option>
                <option value = "5">5</option>
            </select>
        </p>
            
            <p class=font_element>
                <label>Put 7th in Bass or with Melody</label>
                 <select id="seventh_position" name="seventh_position"
                    class="parameters" onchange="get_parameter_change(this);">
                <option value = "treble" selected>In Melody Chord</option>
                <option value = "bass">With Bass Note</option>
            </select>
        </p>
            
    </div><!-- END CONTENT -->

    <!-- START CONTENT -->
    <div id="add_rhythm_content" class="content_text">

        <div id="add_rhythm_text"> </div>
    
        <script>
            do_add_rhythm_text("add_rhythm_text", false);
        </script>
            
        </div><!-- END CONTENT -->


       

        <div id=select_file style='display: block;'>
        <h3> Select Music XML file for processing</h3>


        <p class=font_element>
            <div id=demonstration_score_div>
                <label>Select a Demonstration Score</label>
                        <select id="demonstration_score" name="demonstration_score"
                        style="width:500px;"
                            class="parameters" onchange="get_parameter_change(this);">
                </select>
            </div>
           
            </p>

   
        
        <script> 

            // open xml from <input type='file'
            var song_name;
            var openFile = function (event) 
            {
                let elt = document.getElementById('get_file'); 
                if (!elt)
                {
                    console.error("File not found");
                    throw("file read error");
                }
                song_name = elt.files.item(0).name;             
                //console.log("(IN OPEN FILE: song_name: %s", song_name);
                set_element_value("song_name", song_name);
                parameters.song_name = song_name;
        
        
                let input = event.target;  
                
                reader = new FileReader();
                reader.onload = fileLoaded;
                flag = 1; // reading
                //console.log("SET FLAG: %s READING", flag);
                reader.readAsText(input.files[0]);
            };
    
        </script>
        
        <h3>Select XML file from your Computer</h3>

        <div id="drop-region">
            <div class="drop-message">
                Drag & Drop MusicXML or click to upload a file
            </div>
            
        </div>
        

                <input type='file' id="get_file" accept=".xml,.musicxml" onchange='openFile(event);'>

                <input type=hidden name="load_song" id="load_song" value=1>

                <p></p>
                    <b>Song Name:</b>
                    <span id="song_name" >DD</span>

                
                  
            <p></p>

            <div id='create_score1' style='display:block;'>
                <button onclick="process_loaded_xml();">Process XML</button>
                <br>Create New Score to create score,
            </div>

            <p></p>
                <label>Output File Extension</label>
                <select id="output_file_extension" name="output_file_extension"   
                    class="parameters" onchange="get_parameter_change(this);">
                    <option value = ".xml" selected >.xml</option>
                    <option value = ".musicxml" >.musicxml</option>
                </select>
         


            <p class=font_element>
                <label>Show All Debugs in console</label>
                <select id="show_output_select" name="show_output_select"   
                    class="parameters" onchange="get_parameter_change(this);">
                    <option value = 0 selected >No</option>
                    <option value = 1 >Yes</option>
                </select>
                        </p>  
                        
 
    
 <h3>End of Select Style</h3>
            </div>

            
            <p><hr></p>

                <button onclick="show_transposed_score();">Show Transposed Score</button>
                <button onclick="copy_transposed_score();">Copy Transposed Score to Clipboard</button>
      
            <div id=transposed_score style="display: none;">Transposed Score</div>

        </div>
        <hr>
        <button onclick="set_default_parameters()">Reset Settings</button>
        <button onclick="clear_score()">Clear Current Score</button>

        <hr>
        <p></p>  

            <h3 id=output_file_label >Output File:</h3>
            Change before download if desired
            <input type=text id="output_file_name" name="output_file_name"   
                onchange="change_file_name(this);">

            
            <div id=download_div style="display:none;">
                <a id="download_link" target="_blank" download="test.xml" >
                    <button>Click here to Download Output File</span></button>
                </a>
       
    
        <div id=score_container style="display:none;">
            <h3>SCORE and ZOOM</h3>

            <div id="zoom_navbar">
    
                <button type="button" onclick="zoomin()"> Zoom In</button>
                <button type="button" onclick="zoomout()"> Zoom Out</button>
                <button type="button" onclick="zoom100()"> Reset Zoom</button>
                ZOOM: <input type=text id=zoom style="width: 4em;" onchange="get_parameter_change(this);" />
            </div>

            
            <div id=osmd_container></div>
        </div>

              <!-- try footer here-->

      <div class=info id=footer>
        <script>
            do_footer("footer");
        </script>
            
</div> <!-- footer -->

    </section> <!-- end card-->

</section> <!-- end wrapper-->
</section> <!-- end main-content-->
</section> <!-- end continer-->

<script>

 window.onload = function() 
    {
        console.log("window.onload in HTM");
        //dom not only ready, but everything is loaded

        load_parameters_from_local_storage();
        console.log('parameters.process_content: %s', parameters.process_content);
        
        // don't try to load score on initial load
        if (parameters.process_content == "xxxxview_play")
        {
            load_url_text('scores.txt', "get_score_names_and_process");
        }
        else
        {
            load_url_text('scores.txt', "get_score_names");
        }

        

        setup_drop_and_paste();

        

        let content_name = get_url_var("content");
        console.log("ONLOAD: content_name: %s", content_name);
        
        if (content_name !== "")
        {
            console.log("window.onload: CALL set_content_name('%s'))", content_name);
            set_content_name(content_name);
        }
    };


    var fileLoaded = function (event) {
        //console.log("fileLoaded: event.target.result: %s", event.target.result.substr(0, 100));

        xml_string_loaded = event.target.result;

        // store xml and name for reload
        localStorage.setItem('song_data', xml_string_loaded);

        localStorage.setItem('song_name', song_name);

        process_xml(xml_string_loaded);

    }

    
 

    </script>

    <!-- js placed at the end of the document so the pages load faster -->
    <script src="./libraries/flatlab/js/jquery.js"></script>
    <script src="./libraries/flatlab/js/bootstrap.bundle.min.js"></script>
    <script class="include" type="text/javascript" src="./libraries/flatlab/js/jquery.dcjqaccordion.2.7.js"></script>
    


    <script src="./libraries/flatlab/js/jquery.scrollTo.min.js"></script>
    <script src="./libraries/flatlab/js/slidebars.min.js"></script>
    <script src="./libraries/flatlab/js/jquery.nicescroll.js" type="text/javascript"></script>
    <script src="./libraries/flatlab/js/respond.min.js" ></script>

    <!--common script for all pages-->
    <script src="./libraries/flatlab/js/common-scripts.js"></script>

	<!-- for image gallery -->
    <script src="./libraries/flatlab/js/modernizr.custom.js"></script>
    <script src="./libraries/flatlab/js/toucheffects.js"></script>



  </body>
</html>
